#!/usr/bin/env bash
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

source $SCRIPT_DIR/lib/set_up_test_harness

# ===========================
# TESTS HERE
# ===========================
### Test setup ###
ssm/bin/import_pubkey $SSM_TEST_KEY1_NAME> /dev/null
ssm/bin/add_secret_file ".secret"> /dev/null
ssm/bin/encrypt_secrets> /dev/null
git add . >/dev/null 2>&1
git commit -am "commit secret 1" >/dev/null 2>&1

ssm/bin/decrypt_secrets> /dev/null

ssm/bin/add_secret_file ".secret2"> /dev/null
ssm/bin/encrypt_secrets> /dev/null
git add . >/dev/null 2>&1
git commit -am "commit secret 2" >/dev/null 2>&1


### Test execution ###
start_test "Inform user of new/updated secrets to decrypt."
info_message="\[INFO\] SSM found new/updated secrets to decrypt."

# Checking for newer secrets should not warn user,
# since the latest change was authored by themself
ssm/bin/check_for_secrets_to_decrypt | grep "$info_message" && fail_test "Expected no info of secrets to decrypt"

# After changing the last commit to be made by the captain,
# the user should now be warned
git commit --amend --author="Zapp Brannigan <zapp@bestcaptainever.com>" -m "..." >/dev/null 2>&1
ssm/bin/check_for_secrets_to_decrypt | grep "$info_message" || fail_test "Expected info of secrets to decrypt"

# After decrypting secrets, the warning should go away
ssm/bin/decrypt_secrets> /dev/null
ssm/bin/check_for_secrets_to_decrypt | grep "$info_message" && fail_test "Expected no info of secrets to decrypt"

pass_test

# ====================================
#  Cleanup
# ====================================
destroy_test_env
